#build script for rust seperated into tests and build stages
#referenced materials:
# https://docs.travis-ci.com/user/languages/rust/
# https://github.com/japaric/trust/blob/master/.travis.yml
# https://github.com/roblabla/cargo-travis/blob/master/.travis.yml
# https://docs.travis-ci.com/user/build-stages/#how-to-define-build-stages
# https://dev.to/cad97/great-rust-ci-1fk6

language: rust
sudo: required

env:
  global:
    - CRATE_NAME=speedy-math

matrix:
  # allow_failures:
  #   - rust: nightly
  fast_finish: true

  # The platforms to build against
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Embedded
    - env: TARGET=thumbv6m-none-eabi
    - env: TARGET=thumbv7em-none-eabi
    - env: TARGET=thumbv7em-none-eabihf
    - env: TARGET=thumbv7m-none-eabi

    # # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

jobs:
  include:
    - stage: "Tests"                # naming the Tests stage
      name: "Clippy and Formatting"            # names the first Tests stage job
      before_script:
        - rustup component add rustfmt-preview
        - cargo install clippy
      script: cargo fmt -- --check; cargo clippy -- -D clippy::all
    - script: cargo test --verbose
      name: "Running Tests"     # names the second Tests stage job
    - stage: build
      name: "Build"
      before_script:
        - |
            cargo install &&
            export PATH=$HOME/.cargo/bin:$PATH
        - rustup self update
      script:
        - |
            cargo build &&
            cargo bench &&
            cargo doc
stages:
  - build
  - test
#  - name: deploy
#    if: branch = master